apply plugin: 'com.android.application'

//findbugs
apply plugin: "findbugs"

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.gank.gankly"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 4
        versionName "2.1.1"
        // 4 2.1.1
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        buildConfigField("String", "GANK_SERVER_ULR", "\"${gank_server_url}\"")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testOptions.unitTests.includeAndroidResources = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关闭
    lintOptions {
        abortOnError false
        disable "InvalidPackage"
        lintConfig file("lint.xml")
    }

    // java版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {

    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    apply plugin: 'findbugs'
    task findbugs(type: FindBugs) {
        ignoreFailures = false
        effort = "default"
        reportLevel = "medium"
        excludeFilter = new File("${project.rootDir}/findbugs/findbugs-filter.xml")
        classes = files("${project.rootDir}/app/build/intermediates/classes")
        source = fileTree('src/main/java/')
        classpath = files()
        reports {
            xml.enabled = true
            html.enabled = true
            xml {
                destination "$project.buildDir/findbugs/findbugs-output.xml"
            }
            html {
                destination "$project.buildDir/findbugs/findbugs-output.html"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:shadows-support-v4:3.4-SNAPSHOT'
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation "org.robolectric:robolectric:3.8"
    androidTestCompile 'com.android.support:support-annotations:27.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    // Optional -- UI testing with UI Automator
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    //
    implementation project(':support-ly-business')
    implementation project(':support-ly-rxbus')
    implementation project(':superplayerlibrary')
    implementation project(':support-ly-ui')
    implementation project(':support-ly-jsoup')
    implementation "com.android.support:appcompat-v7:${supportVersion}"
    implementation "com.android.support:design:${supportVersion}"
    implementation "com.android.support:cardview-v7:${supportVersion}"
    implementation "com.android.support:recyclerview-v7:${supportVersion}"
    implementation "com.github.zhaokaiqiang.klog:library:${klogVersion}"
    implementation "com.jakewharton:butterknife:${butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:retrofit-converters:${retrofitConverters}"
    implementation "com.squareup.retrofit2:retrofit-adapters:${retrofitAdapters}"
    implementation "com.squareup.retrofit2:converter-gson:${converterGson}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${adapterRxjava2}"
    implementation "com.squareup.okhttp3:okhttp:${okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp}"
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakcanaryandroid}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryandroid}"
    implementation "com.github.bumptech.glide:glide:${glide}"
    implementation "com.github.bumptech.glide:annotations:${glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide}"

    //greendao 数据库
    implementation "de.greenrobot:greendao:${greendao}"
    implementation "de.greenrobot:greendao-generator:${greendao}"

    //chrome stetho 数据库查看
    implementation "com.facebook.stetho:stetho:${stethoVersion}"
    implementation "com.facebook.stetho:stetho-okhttp3:${stethoOkhttp3}"

    // recyclerview-animators
    implementation 'jp.wasabeef:recyclerview-animators:2.2.3'

    //jsoup

    //    implementation "org.jsoup:jsoup:${jsoup}"

    //底部导航
    implementation "com.roughike:bottom-bar:${bottomBar}"

    //大图库
    implementation "com.davemorrissey.labs:subsampling-scale-image-view:${subsamplingVersion}"

    //rxjava2
    implementation "io.reactivex.rxjava2:rxjava:${rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroid}"
    implementation "com.tencent.bugly:crashreport_upgrade:${crashreportUpgrade}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
}
